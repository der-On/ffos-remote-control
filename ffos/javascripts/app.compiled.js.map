{
  "version": 3,
  "sources": [
    "../../jake-tools/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "ffos/javascripts/app.js"
  ],
  "names": [],
  "mappings
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var io = require('socket.io-client');\nvar rivets = require('rivets');\nvar localforage = require('localforage');\n\nlocalforage.config({\n  driver: localforage.LOCALSTORAGE,\n  name: 'ffos-remote-control'\n});\n\nrivets.formatters.bind = function(/*fn, thisArg[, arg1, arg2, ..., argN]*/)\n{\n  var args = Array.prototype.slice.call(arguments);\n  var fn = args.shift();\n  var self = args.shift();\n\n  if (typeof fn === 'function') {\n    return function() {\n      fn.apply(self, args);\n    }\n  }\n\n  return fn;\n};\n\nfunction noop() {}\n\nfunction Event(name)\n{\n  this.name = name;\n}\n\nvar app = (function() {\n  var self = this;\n  this.newEventName = '';\n  this.editing = false;\n  this.events = [];\n  this.host = 'http://localhost';\n  this.port = 9000;\n  this.inited = false;\n\n  this.addEvent = function(name)\n  {\n    this.events.push(new Event(name));\n    this.newEventName = '';\n    this.saveEvents();\n  };\n\n  this.removeEvent = function(event)\n  {\n    var index = this.events.indexOf(event);\n\n    if (index !== -1) {\n      this.events.splice(index, 1);\n    }\n    this.saveEvents();\n  };\n\n  this.emitEvent = function(name)\n  {\n    // prevent accidental hitting while in edit mode\n    if (this.editing) return;\n\n    this.socket.emit('message', name);\n  };\n\n  this.toggleEditing = function()\n  {\n    this.editing = !this.editing;\n  };\n\n  this.loadEvents = function(cb)\n  {\n    cb = cb || noop;\n\n    localforage.getItem('events', function(error, events) {\n      self.events = events.map(function(name) {\n        return new Event(name);\n      });\n      cb(null);\n    });\n  };\n\n  this.saveEvents = function(cb)\n  {\n    localforage.setItem('events', this.events.map(function(event) {\n      return event.name;\n    }), cb || noop);\n  };\n\n  this.init = function()\n  {\n    this.socket = io(this.host + ':' + this.port);\n    this.inited = true;\n    this.saveSettings();\n    this.loadEvents();\n  };\n\n  this.loadSettings = function()\n  {\n    localforage.getItem('host', function(err, host) {\n      self.host = host || self.host;\n    });\n    localforage.getItem('port', function(err, port) {\n      self.port = port || self.port;\n    });\n  };\n\n  this.saveSettings = function()\n  {\n    localforage.setItem('host', this.host, noop);\n    localforage.getItem('port', this.port, noop);\n  };\n\n  this.loadSettings();\n\n  rivets.bind(document.getElementById('app'), {\n    app: this\n  });\n\n\n})();"
  ]
}